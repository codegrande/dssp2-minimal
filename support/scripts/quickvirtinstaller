#!/bin/bash
# -*- mode: shell-script; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# SPDX-License-Identifier: Unlicense

die()
{
    local _ret=$2
    test -n "$_ret" || _ret=1
    test "$_PRINT_HELP" = yes && print_help >&2
    echo "$1" >&2
    exit ${_ret}
}

begins_with_short_option()
{
    local first_option all_short_options
    all_short_options='abcdefgijkvh'
    first_option="${1:0:1}"
    test "$all_short_options" = "${all_short_options/$first_option/}" && return 1 || return 0
}

_arg_os_media_url="https://fedora.mirror.wearetriple.com/linux/development/rawhide/Everything/x86_64/os/"
_arg_root_password="abc123"
_arg_wheel_name="kcinimod"
_arg_wheel_password="abc123"
_arg_guest_name="myguest"
_arg_guest_mem_size_in_mib="2048"
_arg_guest_num_vcpu="2"
_arg_guest_image_path="/data/kcinimod/libvirt/"
_arg_guest_image_size_in_gib="5"
_arg_os_variant="fedora26"
_arg_verbose=off

print_help ()
{
    printf "%s\n" "Quick Libvirt installer for Fedora with DSSP2 minimal"
    printf 'Usage: %s [-a|--os-media-url <arg>] [-b|--root-password <arg>] [-c|--wheel-name <arg>] [-d|--wheel-password <arg>] [-e|--guest-name <arg>] [-f|--guest-mem-size-in-mib <arg>] [-g|--guest-num-vcpu <arg>] [-i|--guest-image-path <arg>] [-j|--guest-image-size-in-gib <arg>] [-k|--os-variant <arg>] [-v|--(no-)verbose] [-h|--help]\n' "$0"
    printf "\t%s\n" "-a,--os-media-url: URL to installation media (default: '"https://fedora.mirror.wearetriple.com/linux/development/rawhide/Everything/x86_64/os/"')"
    printf "\t%s\n" "-b,--root-password: Guest root password (default: '"abc123"')"
    printf "\t%s\n" "-c,--wheel-name: Guest wheel name (default: '"kcinimod"')"
    printf "\t%s\n" "-d,--wheel-password: Guest wheel password (default: '"abc123"')"
    printf "\t%s\n" "-e,--guest-name: Guest name (default: '"myguest"')"
    printf "\t%s\n" "-f,--guest-mem-size-in-mib: Guest memory size in mebibyte (default: '"2048"')"
    printf "\t%s\n" "-g,--guest-num-vcpu: Guest number of virtual CPU (default: '"2"')"
    printf "\t%s\n" "-i,--guest-image-path: Path to guest image (default: '"/data/kcinimod/libvirt/"')"
    printf "\t%s\n" "-j,--guest-image-size-in-gib: Guest image size in gibibyte (default: '"5"')"
    printf "\t%s\n" "-k,--os-variant: Guest OS variant (default: '"fedora26"')"
    printf "\t%s\n" "-v,--verbose,--no-verbose: Enable verbosity (off by default)"
    printf "\t%s\n" "-h,--help: Prints help"
}

parse_commandline ()
{
    while test $# -gt 0
    do
        _key="$1"
        case "$_key" in
            -a|--os-media-url)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_os_media_url="$2"
                shift
                ;;
            --os-media-url=*)
                _arg_os_media_url="${_key##--os-media-url=}"
                ;;
            -a*)
                _arg_os_media_url="${_key##-a}"
                ;;
            -b|--root-password)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_root_password="$2"
                shift
                ;;
            --root-password=*)
                _arg_root_password="${_key##--root-password=}"
                ;;
            -b*)
                _arg_root_password="${_key##-b}"
                ;;
            -c|--wheel-name)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_wheel_name="$2"
                shift
                ;;
            --wheel-name=*)
                _arg_wheel_name="${_key##--wheel-name=}"
                ;;
            -c*)
                _arg_wheel_name="${_key##-c}"
                ;;
            -d|--wheel-password)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_wheel_password="$2"
                shift
                ;;
            --wheel-password=*)
                _arg_wheel_password="${_key##--wheel-password=}"
                ;;
            -d*)
                _arg_wheel_password="${_key##-d}"
                ;;
            -e|--guest-name)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_guest_name="$2"
                shift
                ;;
            --guest-name=*)
                _arg_guest_name="${_key##--guest-name=}"
                ;;
            -e*)
                _arg_guest_name="${_key##-e}"
                ;;
            -f|--guest-mem-size-in-mib)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_guest_mem_size_in_mib="$2"
                shift
                ;;
            --guest-mem-size-in-mib=*)
                _arg_guest_mem_size_in_mib="${_key##--guest-mem-size-in-mib=}"
                ;;
            -f*)
                _arg_guest_mem_size_in_mib="${_key##-f}"
                ;;
            -g|--guest-num-vcpu)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_guest_num_vcpu="$2"
                shift
                ;;
            --guest-num-vcpu=*)
                _arg_guest_num_vcpu="${_key##--guest-num-vcpu=}"
                ;;
            -g*)
                _arg_guest_num_vcpu="${_key##-g}"
                ;;
            -i|--guest-image-path)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_guest_image_path="$2"
                shift
                ;;
                --guest-image-path=*)
                _arg_guest_image_path="${_key##--guest-image-path=}"
                ;;
            -i*)
                _arg_guest_image_path="${_key##-i}"
                ;;
            -j|--guest-image-size-in-gib)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_guest_image_size_in_gib="$2"
                shift
                ;;
            --guest-image-size-in-gib=*)
                _arg_guest_image_size_in_gib="${_key##--guest-image-size-in-gib=}"
                ;;
            -j*)
                _arg_guest_image_size_in_gib="${_key##-j}"
                ;;
            -k|--os-variant)
                test $# -lt 2 && die "Missing value for the optional argument '$_key'." 1
                _arg_os_variant="$2"
                shift
                ;;
            --os-variant=*)
                _arg_os_variant="${_key##--os-variant=}"
                ;;
            -k*)
                _arg_os_variant="${_key##-k}"
                ;;
            -v|--no-verbose|--verbose)
                _arg_verbose="on"
                test "${1:0:5}" = "--no-" && _arg_verbose="off"
                ;;
            -v*)
                _arg_verbose="on"
                _next="${_key##-v}"
                if test -n "$_next" -a "$_next" != "$_key"
                then
                    begins_with_short_option "$_next" && shift && set -- "-v" "-${_next}" "$@" || die "The short option '$_key' can't be decomposed to ${_key:0:2} and -${_key:2}, because ${_key:0:2} doesn't accept value and '-${_key:2:1}' doesn't correspond to a short option."
                fi
                ;;
            -h|--help)
                print_help
                exit 0
                ;;
            -h*)
                print_help
                exit 0
                ;;
            *)
                _PRINT_HELP=yes die "FATAL ERROR: Got an unexpected argument '$1'" 1
                ;;
        esac
        shift
    done
}

parse_commandline "$@"

_arg_root_salt=$(openssl rand -base64 15)
_arg_wheel_salt=$(openssl rand -base64 15)

rootpw ()
{
    /bin/python3 -c 'import crypt; print(crypt.crypt("'$1'", "$6$'$2'"))'
}

_arg_kickstart_url=$(
cat <<EOF |
text
auth --enableshadow --passalgo=sha512
url --url=${_arg_os_media_url}
keyboard --vckeymap=us-euro --xlayouts=us
lang en_US.UTF-8
network  --bootproto=dhcp --device=eth0 --noipv6 --activate
rootpw --iscrypted $(rootpw ${_arg_root_password} ${_arg_root_salt})
timezone Europe/Amsterdam --isUtc
user --groups=wheel --name=${_arg_wheel_name} --password=$(rootpw ${_arg_wheel_password} ${_arg_wheel_salt}) --iscrypted
bootloader --location=mbr --append=$(printf "%s\n" "\"module.sig_enforce checkreqprot=0 console=tty0 console=ttyS0,115200n8 serial rd_NO_PLYMOUTH\"")
autopart --nolvm
clearpart --all --initlabel
shutdown
repo --name=dssp2 --baseurl=https://tfirg.undo.it/dssp2/
%packages --ignoremissing --nocore --excludeWeakdeps
basesystem
install
systemd
fedora-release
grubby
kbd
passwd
kernel
systemd-udev
binutils
qemu-guest-agent
dssp2-repos
dssp2-minimal
dnf
dnf-plugins-core
less
vim-minimal
coreutils
rootfiles
setup
shadow-utils
util-linux
hostname
iproute
filesystem
sudo
glibc
bash
openssh-server
setools-console
nano
%end
%post
chmod u+w /root
systemctl enable systemd-resolved systemd-networkd
ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf
cat > /etc/systemd/network/ens2.network <<FOE
[Match]
Name=ens2
[Network]
DHCP=yes
FOE
cat > /etc/selinux/semanage.conf <<EFO
module-store = direct
expand-check = 1
usepasswd = false
EFO
cp /usr/lib/tmpfiles.d/pam.conf /etc/tmpfiles.d/
sed -i 's/\/var\/run/\/run/' /etc/tmpfiles.d/pam.conf
cp /usr/lib/tmpfiles.d/initscripts.conf /etc/tmpfiles.d/
sed -i 's/\/var\/run/\/run/' /etc/tmpfiles.d/initscripts.conf
cp /usr/lib/tmpfiles.d/sudo.conf /etc/tmpfiles.d/
sed -i 's/\/var\/run/\/run/' /etc/tmpfiles.d/sudo.conf
cp /usr/lib/tmpfiles.d/samba.conf /etc/tmpfiles.d/
sed -i 's/\/var\/run/\/run/' /etc/tmpfiles.d/samba.conf
cp /usr/lib/systemd/system/sssd-secrets.socket /etc/systemd/system/
sed -i 's/\/var\/run/\/run/' /etc/systemd/system/sssd-secrets.socket
cat /etc/selinux/dssp2-minimal/contexts/x_contexts > /etc/X11/xorg.conf.d/99-selinux.conf
echo ptp_kvm > /etc/modules-load.d/ptp_kvm.conf
echo "refclock PHC /dev/ptp0 poll 3 dpoll -2 offset 0" >> /etc/chrony.conf
echo "install_weak_deps=0" >> /etc/dnf/dnf.conf
semodule -nB
restorecon -RF /
%end
EOF
fpaste
)

if [ -n "$_arg_kickstart_url" ]
then
    virt-install --name=${_arg_guest_name} --memory=${_arg_guest_mem_size_in_mib} --vcpus=${_arg_guest_num_vcpu} \
        --location=${_arg_os_media_url} --cpu=host \
        --os-type=linux --os-variant=${_arg_os_variant} \
        --disk path=${_arg_guest_image_path}/${_arg_guest_name}.qcow2,size=${_arg_guest_image_size_in_gib} --network=user \
        --graphics none --console pty,target_type=serial \
        --extra-args "ks=${_arg_kickstart_url}/raw console=tty0 console=ttyS0,115200n8 serial"
else
    echo "No Kickstart URL: Cancelled!"
fi

exit $?
#EOF
